{"version":3,"sources":["webpack:///path---content-paul-bradshaw-data-journalism-massive-scattered-notes-15ecc8d8356bbd771b5e.js","webpack:///./.cache/json/content-paul-bradshaw-data-journalism-massive-scattered-notes.json"],"names":["webpackJsonp","645","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","path"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,iBAAAC,OAAA,uBAAwDC,gBAAmBC,GAAA,mLAAAC,KAAA,knDAA86BC,aAAk5BL,MAAA,2DAAAM,KAAA,sBAA+FC,aAAgBC,KAAA","file":"path---content-paul-bradshaw-data-journalism-massive-scattered-notes-15ecc8d8356bbd771b5e.js","sourcesContent":["webpackJsonp([25178253186198],{\n\n/***/ 645:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"aendrew.com v8\",\"author\":\"Aendrew Rininsland\"}},\"markdownRemark\":{\"id\":\"/Users/andrew.rininsland/Projects/OTHER/aendrew.github.io/src/pages/2011-10-19-paul-bradshaw-data-journalism-massive-scattered-notes/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Scraping</h1>\\n<ul>\\n<li>\\n<p>Tools:</p>\\n<ul>\\n<li>OutWit Hub</li>\\n<li>Needlebase</li>\\n<li>Scraperwiki</li>\\n<li>Google Spreadsheets</li>\\n<li>Formulae</li>\\n</ul>\\n</li>\\n<li>\\n<p>Walkthru using Google Docs (=import)</p>\\n<ol>\\n<li>Open a spreadsheet</li>\\n<li>In A1, type the URL of a page with a table.</li>\\n<li>In cell A2, type: <strong>=ImportHTML(A1, “table”, 1)</strong></li>\\n<li>\\n<p>Function importHTML(<em>$source</em>, <em>$element</em>, <em>$index</em>)</p>\\n<ul>\\n<li>Source = Where you’re getting data from. Can be a spreadsheet cell.</li>\\n<li>Object = Which type of object in the HTML document you want to parse. Likewise.</li>\\n<li>Index = Which object? Ditto.</li>\\n</ul>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Use Google News RSS; Google Alerts</p>\\n</li>\\n<li>\\n<p>Set up a regular supply of data:</p>\\n<ul>\\n<li>RSS for regulators, campaigns, gov, EU, ONS, data.gov.uk</li>\\n<li>RSS feeds for WDTK, OpenlyLocal, OpenCorporates, OpenCharities, disclosure logs</li>\\n</ul>\\n</li>\\n<li>\\n<p>Advanced spreadsheet stuff:</p>\\n<ul>\\n<li>“filetype:”, “site:” do what you expect.</li>\\n<li>\\n<p>”~” is for synonyms</p>\\n<h5>lunchbreak</h5>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Using importXML(<em>$url</em>, <em>$xpath</em>)</p>\\n<ul>\\n<li>\\n<p>Useful xpaths:</p>\\n<ul>\\n<li>“//div[starts-with(@class, ‘jobWrap’)]”</li>\\n<li>“//p[starts-with(@style, ‘font-size: 10pt’)]”</li>\\n</ul>\\n</li>\\n<li>=transpose($range) changes from rows to columns.</li>\\n</ul>\\n</li>\\n</ul>\\n<h3>For next class:</h3>\\n<ul>\\n<li><em>Play around with some scraping tools and write a blog about it.</em></li>\\n<li><em>Start shaping your project.</em> </li>\\n</ul>\",\"frontmatter\":{\"title\":\"Paul Bradshaw Data Journalism Massive -- scattered notes\",\"date\":\"October 19, 2011\"}}},\"pathContext\":{\"path\":\"content/paul-bradshaw-data-journalism-massive-scattered-notes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---content-paul-bradshaw-data-journalism-massive-scattered-notes-15ecc8d8356bbd771b5e.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"aendrew.com v8\",\"author\":\"Aendrew Rininsland\"}},\"markdownRemark\":{\"id\":\"/Users/andrew.rininsland/Projects/OTHER/aendrew.github.io/src/pages/2011-10-19-paul-bradshaw-data-journalism-massive-scattered-notes/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Scraping</h1>\\n<ul>\\n<li>\\n<p>Tools:</p>\\n<ul>\\n<li>OutWit Hub</li>\\n<li>Needlebase</li>\\n<li>Scraperwiki</li>\\n<li>Google Spreadsheets</li>\\n<li>Formulae</li>\\n</ul>\\n</li>\\n<li>\\n<p>Walkthru using Google Docs (=import)</p>\\n<ol>\\n<li>Open a spreadsheet</li>\\n<li>In A1, type the URL of a page with a table.</li>\\n<li>In cell A2, type: <strong>=ImportHTML(A1, “table”, 1)</strong></li>\\n<li>\\n<p>Function importHTML(<em>$source</em>, <em>$element</em>, <em>$index</em>)</p>\\n<ul>\\n<li>Source = Where you’re getting data from. Can be a spreadsheet cell.</li>\\n<li>Object = Which type of object in the HTML document you want to parse. Likewise.</li>\\n<li>Index = Which object? Ditto.</li>\\n</ul>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Use Google News RSS; Google Alerts</p>\\n</li>\\n<li>\\n<p>Set up a regular supply of data:</p>\\n<ul>\\n<li>RSS for regulators, campaigns, gov, EU, ONS, data.gov.uk</li>\\n<li>RSS feeds for WDTK, OpenlyLocal, OpenCorporates, OpenCharities, disclosure logs</li>\\n</ul>\\n</li>\\n<li>\\n<p>Advanced spreadsheet stuff:</p>\\n<ul>\\n<li>“filetype:”, “site:” do what you expect.</li>\\n<li>\\n<p>”~” is for synonyms</p>\\n<h5>lunchbreak</h5>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Using importXML(<em>$url</em>, <em>$xpath</em>)</p>\\n<ul>\\n<li>\\n<p>Useful xpaths:</p>\\n<ul>\\n<li>“//div[starts-with(@class, ‘jobWrap’)]”</li>\\n<li>“//p[starts-with(@style, ‘font-size: 10pt’)]”</li>\\n</ul>\\n</li>\\n<li>=transpose($range) changes from rows to columns.</li>\\n</ul>\\n</li>\\n</ul>\\n<h3>For next class:</h3>\\n<ul>\\n<li><em>Play around with some scraping tools and write a blog about it.</em></li>\\n<li><em>Start shaping your project.</em> </li>\\n</ul>\",\"frontmatter\":{\"title\":\"Paul Bradshaw Data Journalism Massive -- scattered notes\",\"date\":\"October 19, 2011\"}}},\"pathContext\":{\"path\":\"content/paul-bradshaw-data-journalism-massive-scattered-notes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/content-paul-bradshaw-data-journalism-massive-scattered-notes.json\n// module id = 645\n// module chunks = 25178253186198"],"sourceRoot":""}